c!
next_biggest
n
c
s
n
c
n
node
n
node
n
node
s
node.left
node
s
n
s
n
@parent
@current
n
q
next_biggest
n
c
q
next_biggest
n
c
c!
q
 value.is?(node.data)
s
n
node.left
value
n
node
n
node.data
value
s
n
@current
@parent
n
c!
q
next_biggest.right
next_biggest_parent.left
next_biggest_parent.right
next_biggest_parent.left
next_biggest_parent
@current.data
n
next_biggest
next_biggest_parent
n
s
n
c!
q
next_biggest_parent
next_biggest
n
next_biggest
n
s
n
@current
@parent
n
node.data
value
s
n
q
n
c!
q
value
node.data
value
s
@current.data
n
@current.data
n
node
n
node.left
node
s
n
c!
n
@left.data
@left
s
n
right
left
data
value
s
n
@current
@parent
n
q
c!
q
n
value == left.data
value
left.data
s
n
@current
@parent
n
c
c!
q
n
root
n
root
n
root
n
tip
start
s
root
n
tip
start
s
root
n
mid
n
tip
start
s
root
n
tip
start
s
root
n
root
mid
n
tip
start
s
root
n
root
n
tip
start
s
mid
tip
n
tip
start
s
root
n
mid
n
tip
start
s
root
n
mid
n
tip
start
n
s
q
n
q
n
root
n
mid
n
tip
start
n
s
q
mid + 1
mid
root
ar[0..(1-1)]
ar[0..(mid-1)]
mid
ar
ae
ar[(mid+1)..-1]
ar[0..(mid-1)]
root
ar
root
n
ar[mid]
mid
n
mid
tip
start
n
ar
n
ar[(mid+1)..-1]
root.left.right
root.left.left
root.left.data
root.left
n
root
n
mid
n
tip
start
n
ar
n
ar[(mid+1)..-1]
ar[0..(mid-1)]
root
n
q
n
ar
n
ar[(mid+1)..-1]
ar[0..(mid-1)]
n
root
tip
start
root
n
